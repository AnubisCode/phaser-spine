/*!
 * phaser-spine - version 3.1.0-alpha1 
 * Spine plugin for Phaser.io!
 *
 * OrangeGames
 * Build at 15-01-2017
 * Released under MIT License 
 */

var __extends=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)},PhaserSpine;!function(a){var b;!function(b){var c=function(){function b(a){this.game=a}return b.prototype.resize=function(a,b){var c=(this.game.width,this.game.height,a.x+a.width/2,a.y+a.height/2,a.width/this.game.width),d=a.height/this.game.height,e=1.2*Math.max(c,d);this.game.width*e,this.game.height*e;b.context.resetTransform(),b.context.scale(1/e,1/e),b.context.translate(a.width/2,a.height),b.context.translate(a.x,a.y)},b.prototype.drawImages=function(b,c){var d=c.context,e=b.drawOrder;a.SpinePlugin.DEBUG&&(d.strokeStyle="green");for(var f=0,g=e.length;f<g;f++){var h=e[f],i=h.getAttachment(),j=null,k=null,l=null;if(i instanceof spine.RegionAttachment){var m=i;l=m.updateWorldVertices(h,!1),j=m.region,k=j.texture.getImage();var n=i,o=h.bone,p=l[0],q=l[1],r=(o.getWorldRotationX()-n.rotation)*Math.PI/180,s=l[24]-l[0],t=l[25]-l[1],u=l[8]-l[0],v=l[9]-l[1],w=Math.sqrt(s*s+t*t),x=-Math.sqrt(u*u+v*v);d.translate(p,q),d.rotate(r),j.rotate?(d.rotate(Math.PI/2),d.drawImage(k,j.x,j.y,j.height,j.width,0,0,x,-w),d.rotate(-Math.PI/2)):d.drawImage(k,j.x,j.y,j.width,j.height,0,0,w,x),a.SpinePlugin.DEBUG&&d.strokeRect(0,0,w,x),d.rotate(-r),d.translate(-p,-q)}}},b.prototype.drawTriangles=function(c,d){for(var e=null,f=null,g=null,h=c.drawOrder,i=0,j=h.length;i<j;i++){var k=h[i],l=k.getAttachment(),m=null,n=null;if(l instanceof spine.RegionAttachment){var o=l;f=o.updateWorldVertices(k,!1),g=b.QUAD_TRIANGLES,n=o.region,m=n.texture.getImage()}else{if(!(l instanceof spine.MeshAttachment))continue;var p=l;f=p.updateWorldVertices(k,!1),g=p.triangles,m=p.region.renderObject.texture.getImage()}if(null!=m){var q=k.data.blendMode;q!=e&&(e=q);for(var r=d.context,s=0;s<g.length;s+=3){var t=8*g[s],u=8*g[s+1],v=8*g[s+2],w=f[t],x=f[t+1],y=f[t+6],z=f[t+7],A=f[u],B=f[u+1],C=f[u+6],D=f[u+7],E=f[v],F=f[v+1],G=f[v+6],H=f[v+7];this.drawTriangle(d,m,w,x,y,z,A,B,C,D,E,F,G,H),a.SpinePlugin.DEBUG&&(r.strokeStyle="green",r.beginPath(),r.moveTo(w,x),r.lineTo(A,B),r.lineTo(E,F),r.lineTo(w,x),r.stroke())}}}},b.prototype.drawTriangle=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){var o=a.context;e*=b.width,f*=b.height,i*=b.width,j*=b.height,m*=b.width,n*=b.height,o.beginPath(),o.moveTo(c,d),o.lineTo(g,h),o.lineTo(k,l),o.closePath(),g-=c,h-=d,k-=c,l-=d,i-=e,j-=f,m-=e,n-=f;var p=1/(i*n-m*j),q=(n*g-j*k)*p,r=(n*h-j*l)*p,s=(i*k-m*g)*p,t=(i*l-m*h)*p,u=c-q*e-s*f,v=d-r*e-t*f;o.save(),o.transform(q,r,s,t,u,v),o.clip(),o.drawImage(b,0,0),o.restore()},b}();c.QUAD_TRIANGLES=[0,1,2,2,3,0],b.Renderer=c}(b=a.Canvas||(a.Canvas={}))}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b;!function(a){var b=function(a){function b(b){return a.call(this,b)||this}return __extends(b,a),b.prototype.setFilters=function(a,b){},b.prototype.setWraps=function(a,b){},b.prototype.dispose=function(){},b}(spine.Texture);a.Texture=b}(b=a.Canvas||(a.Canvas={}))}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b=function(b){function c(a,c){return b.call(this,a,c)||this}return __extends(c,b),c.prototype.init=function(a){c.DEBUG=a.debugRendering||!1,c.TRIANGLE=a.triangleRendering||!1,this.addSpineCache(),this.addSpineFactory(),this.addSpineLoader()},c.prototype.addSpineLoader=function(){Phaser.Loader.prototype.spine=function(a,b,d){var e=b.substr(0,b.lastIndexOf("."));this.text(c.SPINE_NAMESPACE+a,e+".atlas"),this.json(c.SPINE_NAMESPACE+a,e+".json"),this.image(c.SPINE_NAMESPACE+a,e+".png")}},c.prototype.addSpineFactory=function(){Phaser.GameObjectFactory.prototype.spine=function(b,d,e,f,g){function h(a){a.data;a.setToSetupPose(),a.updateWorldTransform();var c=new spine.Vector2,e=new spine.Vector2;return a.getBounds(c,e),new PIXI.Rectangle(b,d,e.x,e.y)}void 0===g&&(g=this.world);var i=new spine.TextureAtlas(this.game.cache.getText(c.SPINE_NAMESPACE+e),function(b){return new a.Canvas.Texture(this.game.cache.getImage(c.SPINE_NAMESPACE+e))}),j=new spine.AtlasAttachmentLoader(i),k=new spine.SkeletonJson(j),l=k.readSkeletonData(this.game.cache.getJSON(c.SPINE_NAMESPACE+e)),m=new spine.Skeleton(l);m.flipY=!0;var n=h(m),o=new spine.AnimationState(new spine.AnimationStateData(m.data));o.setAnimation(0,"walk",!0);var p=new a.Spine(this.game,b,d,m,n,o);return g.add(p)},Phaser.GameObjectCreator.prototype.spine=function(a,b,c,d,e){return null}},c.prototype.addSpineCache=function(){Phaser.Cache.prototype.spine={},Phaser.Cache.prototype.addSpine=function(a,b){this.spine[a]=b},Phaser.Cache.prototype.getSpine=function(a){return!this.spine.hasOwnProperty(a),this.spine[a]}},c}(Phaser.Plugin);b.RESOLUTION_REGEXP=/@(.+)x/,b.SPINE_NAMESPACE="spine",b.DEBUG=!1,b.TRIANGLE=!1,a.SpinePlugin=b}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b=function(b){function c(c,d,e,f,g,h,i){var j=b.call(this,c,d,e,null)||this;return j.skeleton=f,j.bounds=g,j.state=h,i||(i={debugRendering:!1,triangleRendering:!0}),j.renderer=new a.Canvas.Renderer(j.game),j}return __extends(c,b),c.prototype.getBounds=function(a){return this.bounds},c.prototype.update=function(){b.prototype.update.call(this),this.state.update(this.game.time.elapsed/1e3),this.state.apply(this.skeleton),this.skeleton.updateWorldTransform()},c.prototype._renderCanvas=function(b,c){this.renderer.resize(this.bounds,b),a.SpinePlugin.TRIANGLE?this.renderer.drawTriangles(this.skeleton,b):this.renderer.drawImages(this.skeleton,b)},c.prototype._renderWebGL=function(a,b){},c}(Phaser.Sprite);a.Spine=b}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b;!function(a){var b=function(){function a(){}return a.prototype.draw=function(a,b){},a}();a.Renderer=b}(b=a.WebGL||(a.WebGL={}))}(PhaserSpine||(PhaserSpine={}));