/*!
 * phaser-spine - version 3.1.0-alpha1 
 * Spine plugin for Phaser.io!
 *
 * OrangeGames
 * Build at 13-01-2017
 * Released under MIT License 
 */

var __extends=this&&this.__extends||function(a,b){function c(){this.constructor=a}for(var d in b)b.hasOwnProperty(d)&&(a[d]=b[d]);a.prototype=null===b?Object.create(b):(c.prototype=b.prototype,new c)},PhaserSpine;!function(a){var b;!function(a){var b=function(){function a(a){this.triangleRendering=!1,this.debugRendering=!1,this.spines=[],this.ctx=a.context,this.game=a}return a.prototype.add=function(a){this.spines.push(a)},a.prototype.draw=function(){var a=this;this.spines.forEach(function(b){a.resize(b.bounds),a.triangleRendering?a.drawTriangles(b.skeleton):a.drawImages(b.skeleton)})},a.prototype.resize=function(a){var b=(this.game.width,this.game.height,a.x+a.width/2),c=a.y+a.height/2,d=a.width/this.game.width,e=a.height/this.game.height,f=1.2*Math.max(d,e);f<1&&(f=1);var g=this.game.width*f,h=this.game.height*f;this.game.context.resetTransform(),this.game.context.scale(1/f,1/f),this.game.context.translate(-b,-c),this.game.context.translate(g/2,h/2)},a.prototype.drawImages=function(a){var b=this.ctx,c=a.drawOrder;this.debugRendering&&(b.strokeStyle="green");for(var d=0,e=c.length;d<e;d++){var f=c[d],g=f.getAttachment(),h=null,i=null,j=null;if(g instanceof spine.RegionAttachment){var k=g;j=k.updateWorldVertices(f,!1),h=k.region,i=h.texture.getImage();var l=g,m=f.bone,n=j[0],o=j[1],p=(m.getWorldRotationX()-l.rotation)*Math.PI/180,q=j[24]-j[0],r=j[25]-j[1],s=j[8]-j[0],t=j[9]-j[1],u=Math.sqrt(q*q+r*r),v=-Math.sqrt(s*s+t*t);b.translate(n,o),b.rotate(p),h.rotate?(b.rotate(Math.PI/2),b.drawImage(i,h.x,h.y,h.height,h.width,0,0,v,-u),b.rotate(-Math.PI/2)):b.drawImage(i,h.x,h.y,h.width,h.height,0,0,u,v),this.debugRendering&&b.strokeRect(0,0,u,v),b.rotate(-p),b.translate(-n,-o)}}},a.prototype.drawTriangles=function(b){for(var c=null,d=null,e=null,f=b.drawOrder,g=0,h=f.length;g<h;g++){var i=f[g],j=i.getAttachment(),k=null,l=null;if(j instanceof spine.RegionAttachment){var m=j;d=m.updateWorldVertices(i,!1),e=a.QUAD_TRIANGLES,l=m.region,k=l.texture.getImage()}else{if(!(j instanceof spine.MeshAttachment))continue;var n=j;d=n.updateWorldVertices(i,!1),e=n.triangles,k=n.region.renderObject.texture.getImage()}if(null!=k){var o=i.data.blendMode;o!=c&&(c=o);for(var p=this.ctx,q=0;q<e.length;q+=3){var r=8*e[q],s=8*e[q+1],t=8*e[q+2],u=d[r],v=d[r+1],w=d[r+6],x=d[r+7],y=d[s],z=d[s+1],A=d[s+6],B=d[s+7],C=d[t],D=d[t+1],E=d[t+6],F=d[t+7];this.drawTriangle(k,u,v,w,x,y,z,A,B,C,D,E,F),this.debugRendering&&(p.strokeStyle="green",p.beginPath(),p.moveTo(u,v),p.lineTo(y,z),p.lineTo(C,D),p.lineTo(u,v),p.stroke())}}}},a.prototype.drawTriangle=function(a,b,c,d,e,f,g,h,i,j,k,l,m){var n=this.ctx;d*=a.width,e*=a.height,h*=a.width,i*=a.height,l*=a.width,m*=a.height,n.beginPath(),n.moveTo(b,c),n.lineTo(f,g),n.lineTo(j,k),n.closePath(),f-=b,g-=c,j-=b,k-=c,h-=d,i-=e,l-=d,m-=e;var o=1/(h*m-l*i),p=(m*f-i*j)*o,q=(m*g-i*k)*o,r=(h*j-l*f)*o,s=(h*k-l*g)*o,t=b-p*d-r*e,u=c-q*d-s*e;n.save(),n.transform(p,q,r,s,t,u),n.clip(),n.drawImage(a,0,0),n.restore()},a}();b.QUAD_TRIANGLES=[0,1,2,2,3,0],a.Renderer=b}(b=a.Canvas||(a.Canvas={}))}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b;!function(a){var b=function(a){function b(b){return a.call(this,b)||this}return __extends(b,a),b.prototype.setFilters=function(a,b){},b.prototype.setWraps=function(a,b){},b.prototype.dispose=function(){},b}(spine.Texture);a.Texture=b}(b=a.Canvas||(a.Canvas={}))}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b=function(b){function c(a,c){return b.call(this,a,c)||this}return __extends(c,b),c.prototype.init=function(b){b||(b={debugRendering:!1,triangleRendering:!0}),this.renderer=new a.Canvas.Renderer(this.game),this.renderer.debugRendering=b.debugRendering,this.renderer.triangleRendering=b.triangleRendering,this.addSpineCache(),this.addSpineFactory(),this.addSpineLoader()},c.prototype.addSpineLoader=function(){Phaser.Loader.prototype.spine=function(a,b,d){var e=b.substr(0,b.lastIndexOf("."));this.text(c.SPINE_NAMESPACE+a,e+".atlas"),this.json(c.SPINE_NAMESPACE+a,e+".json"),this.image(c.SPINE_NAMESPACE+a,e+".png")}},c.prototype.render=function(){this.renderer.draw()},c.prototype.addSpineFactory=function(){var b=this.renderer;Phaser.GameObjectFactory.prototype.spine=function(d,e,f,g,h){function i(a){a.data;a.setToSetupPose(),a.updateWorldTransform();var b=new spine.Vector2,c=new spine.Vector2;return a.getBounds(b,c),new Phaser.Rectangle(b.x,b.y,c.x,c.y)}void 0===h&&(h=this.world);var j=new spine.TextureAtlas(this.game.cache.getText(c.SPINE_NAMESPACE+f),function(b){return new a.Canvas.Texture(this.game.cache.getImage(c.SPINE_NAMESPACE+f))}),k=new spine.AtlasAttachmentLoader(j),l=new spine.SkeletonJson(k),m=l.readSkeletonData(this.game.cache.getJSON(c.SPINE_NAMESPACE+f)),n=new spine.Skeleton(m);n.flipY=!0;var o=i(n),p=new spine.AnimationState(new spine.AnimationStateData(n.data));p.setAnimation(0,"walk",!0);var q=new a.Spine(this.game,n,o,p);return b.add(q),h.add(q)},Phaser.GameObjectCreator.prototype.spine=function(a,b,c,d,e){return null}},c.prototype.addSpineCache=function(){Phaser.Cache.prototype.spine={},Phaser.Cache.prototype.addSpine=function(a,b){this.spine[a]=b},Phaser.Cache.prototype.getSpine=function(a){return!this.spine.hasOwnProperty(a),this.spine[a]}},c}(Phaser.Plugin);b.RESOLUTION_REGEXP=/@(.+)x/,b.SPINE_NAMESPACE="spine",a.SpinePlugin=b}(PhaserSpine||(PhaserSpine={}));var PhaserSpine;!function(a){var b=function(a){function b(b,c,d,e){var f=a.call(this,b)||this;return f.skeleton=c,f.bounds=d,f.state=e,f}return __extends(b,a),b.prototype.update=function(){a.prototype.update.call(this),this.state.update(this.game.time.elapsed/1e3),this.state.apply(this.skeleton),this.skeleton.updateWorldTransform()},b}(Phaser.Group);a.Spine=b}(PhaserSpine||(PhaserSpine={}));